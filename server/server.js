require("dotenv").config();
const express = require("express");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const morgan = require("morgan");
const connectDb = require("./config/db");
const { log } = console;

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
const productRoutes = require("./routes/productRoutes");

// –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ express
const app = express();

// Middleware (–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Å–ª–æ–π)
app.use(cors());
app.use(express.json());
app.use(morgan("dev"));
app.use((req, res, next) => {
  log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
  next();
});
app.use("/images", express.static("./images"));

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
app.use("/elmag", productRoutes);

// –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userReg = require("./routes/userReg");
app.use("/elmag", userReg);

// –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const authUser = require("./routes/userLogin");
app.use("/elmag", authUser);

// –ø–æ—Ä—Ç
const PORT = process.env.PORT || 3001;

async function startServer() {
  try {
    await connectDb();
    app.listen(PORT, () => {
      log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });
  } catch (error) {
    log("‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:", error.message);
    process.exit(1);
  }
}
startServer();
